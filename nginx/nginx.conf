
events {}

http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name _;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location / {
            root /data/www;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # Ensure CSS files are served with correct MIME type for static files only
        # This should only match CSS files in the root directory, not in subdirectories
        location ~* ^/[^/]+\.css$ {
            root /data/www;
            add_header Content-Type text/css always;
            expires 1h;
            add_header Cache-Control "public, no-transform" always;
        }

        # location /ocr/ {
        #     proxy_pass http://ocr:8080/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_set_header Host $host;
        # }

        location /chatbot/ {
            proxy_pass http://chat:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
        }

        location /flight/ {
            proxy_pass http://flight:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
        }

        # location /translator/ {
        #     proxy_pass http://translator:8080/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_set_header Host $host;
        # }

        # location /recruiter-assistant/ {
        #     proxy_pass http://recruiter-assistant:8080/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_set_header Host $host;
        # }
        
        # location /healthcare/ {
        #     proxy_pass http://healthcare:8080/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_set_header Host $host;
        # }

    }

}